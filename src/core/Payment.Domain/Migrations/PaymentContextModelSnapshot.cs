// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payment.Domain.Entities;

#nullable disable

namespace Payment.Domain.Migrations
{
    [DbContext(typeof(PaymentContext))]
    partial class PaymentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Payment.Domain.Entities.Merchant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MerchantIpnUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MerchantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MerchantReturnUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MerchantWebLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SerectKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Merchant__3214EC07E6617C1B");

                    b.ToTable("Merchant", (string)null);
                });

            modelBuilder.Entity("Payment.Domain.Entities.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MerchantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("PaymentContent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PaymentContent2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCurrency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentDestinationId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentLanguage")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PaymentLastMessage")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PaymentRefId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("RequiredAmount")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC071C987700");

                    b.HasIndex("MerchantId");

                    b.HasIndex("PaymentDestinationId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentDestination", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesLogo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DesName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DesShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DesSortIndex")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ParentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__PaymentD__3214EC071CEF14AC");

                    b.HasIndex("ParentId");

                    b.ToTable("PaymentDestination", (string)null);
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentNotification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiAmount")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiContent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiMessage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiResDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiSignature")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NotiStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentRefId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__PaymentN__3214EC078A1D9815");

                    b.HasIndex("MerchantId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentNotification", (string)null);
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentSignature", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SignAlgo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SignDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SignOwn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SignValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__PaymentS__3214EC07758AD836");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentSignature", (string)null);
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TranAmount")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<DateTime?>("TranDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TranMessage")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TranPayload")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TranStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__PaymentT__3214EC07B6A13815");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentTransaction", (string)null);
                });

            modelBuilder.Entity("Payment.Domain.Entities.Payment", b =>
                {
                    b.HasOne("Payment.Domain.Entities.Merchant", "Merchant")
                        .WithMany("Payments")
                        .HasForeignKey("MerchantId")
                        .HasConstraintName("FK__Payment__Merchan__33D4B598");

                    b.HasOne("Payment.Domain.Entities.PaymentDestination", "PaymentDestination")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentDestinationId")
                        .HasConstraintName("FK__Payment__Payment__32E0915F");

                    b.Navigation("Merchant");

                    b.Navigation("PaymentDestination");
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentDestination", b =>
                {
                    b.HasOne("Payment.Domain.Entities.PaymentDestination", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_PaymentDestination_ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentNotification", b =>
                {
                    b.HasOne("Payment.Domain.Entities.Merchant", "Merchant")
                        .WithMany("PaymentNotifications")
                        .HasForeignKey("MerchantId")
                        .HasConstraintName("FK__PaymentNo__Merch__44FF419A");

                    b.HasOne("Payment.Domain.Entities.Payment", "Payment")
                        .WithMany("PaymentNotifications")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__PaymentNo__Payme__440B1D61");

                    b.Navigation("Merchant");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentSignature", b =>
                {
                    b.HasOne("Payment.Domain.Entities.Payment", "Payment")
                        .WithMany("PaymentSignatures")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__PaymentSi__Payme__412EB0B6");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentTransaction", b =>
                {
                    b.HasOne("Payment.Domain.Entities.Payment", "Payment")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__PaymentTr__Payme__300424B4");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Payment.Domain.Entities.Merchant", b =>
                {
                    b.Navigation("PaymentNotifications");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Payment.Domain.Entities.Payment", b =>
                {
                    b.Navigation("PaymentNotifications");

                    b.Navigation("PaymentSignatures");

                    b.Navigation("PaymentTransactions");
                });

            modelBuilder.Entity("Payment.Domain.Entities.PaymentDestination", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
